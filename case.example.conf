# case.example.conf
# nginx配置文件示例 - case.coderboot.xyz 主配置文件
# 
# 这个配置文件管理所有静态HTML案例项目，通过路径分离的方式访问不同案例
# 部署路径：/etc/nginx/sites-available/case.conf
# 启用方法：ln -sf /etc/nginx/sites-available/case.conf /etc/nginx/sites-enabled/case.conf
#
# 项目架构说明：
# - 使用主配置文件管理多个静态案例，避免配置冲突
# - 文件部署到 /var/www/html/showpage/ 目录
# - 通过不同location路径访问：/showpage、/postereditor 等
# - 统一的安全头部和缓存策略
#

server {
    listen 80;
    server_name case.coderboot.xyz;
    root /var/www/html;
    
    # ========== 压缩和性能优化 ==========
    # 启用gzip压缩，提升传输效率
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # ========== 路由配置 ==========
    # 根路径重定向到主要案例 /showpage
    location = / {
        return 301 /showpage/;
    }
    
    # ========== ShowPage 案例 ==========
    # showpage HTML页面展示案例
    # 文件路径：/var/www/html/showpage/
    # 访问地址：http://case.coderboot.xyz/showpage/
    location /showpage {
        # 使用root + try_files的方式，比alias更可靠
        try_files $uri $uri/ $uri/index.html =404;
        
        # 安全头部配置，防止XSS、点击劫持等攻击
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    }
    
    # showpage 页面列表API接口
    # 返回当前可用的HTML页面列表（JSON格式）
    # 访问地址：http://case.coderboot.xyz/showpage/api/pages
    location /showpage/api/pages {
        default_type application/json;
        return 200 '{
            "pages": [
                {"name": "promptbase-link-refly-guizang-v2-claude4.html", "title": "PromptBase Link Refly v2"},
                {"name": "arxivlicense-link-refly-guizang-v2-claude4.html", "title": "ArxivLicense Link Refly v2"},
                {"name": "openevals-link-sumbuddy-refly-guizang-v3-claude4.html", "title": "OpenEvals Link Sumbuddy v3"},
                {"name": "openevals-link-refly-guizang-v3-claude4.html", "title": "OpenEvals Link Refly v3"},
                {"name": "openevals-link-refly-guizang-v2-claude4.html", "title": "OpenEvals Link Refly v2"}
            ]
        }';
    }
    
    # ========== PostEditor 案例 (预留配置) ==========
    # postereditor 海报编辑器案例 - 将来添加时取消注释
    # 文件路径：/var/www/html/postereditor/
    # 访问地址：http://case.coderboot.xyz/postereditor/
    #
    # location /postereditor {
    #     try_files $uri $uri/ $uri/index.html =404;
    #     
    #     # 安全头部配置
    #     add_header X-Frame-Options "SAMEORIGIN" always;
    #     add_header X-XSS-Protection "1; mode=block" always;
    #     add_header X-Content-Type-Options "nosniff" always;
    #     add_header Referrer-Policy "no-referrer-when-downgrade" always;
    #     add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    # }
    #
    # # postereditor API接口 - 将来添加时取消注释
    # location /postereditor/api/pages {
    #     default_type application/json;
    #     return 200 '{"pages": [{"name": "home_page.html", "title": "主页"}]}';
    # }
    
    # ========== 缓存策略 ==========
    # 静态资源缓存（图片、CSS、JS等）
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # HTML文件不缓存，确保内容更新能及时生效
    location ~* \.html$ {
        expires -1;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate";
    }
    
    # ========== 错误页面和日志 ==========
    # 自定义错误页面
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    # 日志文件配置
    access_log /var/log/nginx/case.coderboot.xyz.access.log;
    error_log /var/log/nginx/case.coderboot.xyz.error.log;
    
    # ========== 安全配置 ==========
    # 禁止访问隐藏文件（以.开头的文件）
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # 禁止访问备份文件
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# ========== 配置文件使用说明 ==========
#
# 1. 部署步骤：
#    sudo cp case.example.conf /etc/nginx/sites-available/case.conf
#    sudo ln -sf /etc/nginx/sites-available/case.conf /etc/nginx/sites-enabled/case.conf
#    sudo nginx -t
#    sudo systemctl reload nginx
#
# 2. 文件部署：
#    文件需要部署到 /var/www/html/showpage/ 目录
#    文件所有者应设置为 www-data:www-data
#    文件权限应设置为 644
#
# 3. 添加新案例的步骤：
#    a) 在 /var/www/html/ 下创建新案例目录
#    b) 在本配置文件中添加对应的 location 块
#    c) 如需API，添加对应的API location块
#    d) 重新加载nginx配置
#
# 4. 架构优势：
#    - 统一管理：单一配置文件管理所有静态案例
#    - 易于扩展：添加新案例只需配置新location
#    - 安全可靠：完整的安全头部和权限控制
#    - 性能优化：智能缓存策略和gzip压缩
#
``` 